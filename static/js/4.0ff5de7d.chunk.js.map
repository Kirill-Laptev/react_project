{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","event","currentTarget","value","onBlur","updateUserStatus","autoFocus","onDoubleClick","ProfileInfo","userProfile","undefined","Preloader","className","styles","profile","profileAvatar","src","photos","large","lastDescription","Post","classes","item","alt","message","likeCounts","maxLength30","maxLengthCreator","ProfileAddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","requiredField","MyPosts","addNewPost","values","addPost","newMessage","setTimeout","setState","a","console","log","myposts","newpost","this","posts","map","el","React","PureComponent","MyPostsContainer","connect","state","newPostText","profilePage","postsData","Profile","ProfileContainer","userID","match","params","authorizedUserID","history","push","getUserProfile","getUserStatus","Component","compose","auth","id","isAuth","fake","fakeNum","getProfileThunkCreator","getUserStatusTC","updateUserStatusTC","withRouter"],"mappings":"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","file":"static/js/4.0ff5de7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2LHtf\",\"description\":\"ProfileInfo_description__2yWda\",\"profileAvatar\":\"ProfileInfo_profileAvatar__1DNIM\",\"lastDescription\":\"ProfileInfo_lastDescription__1EXxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    const activateMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateMode = () => {\n        setEditMode(false)\n        props.updateUserStatus(status)\n    }\n\n\n    const onStatusChange = (event) => {\n        setStatus(event.currentTarget.value)\n    }\n\n    return(\n        <div>\n            {editMode\n            ? <div><input onChange={onStatusChange} onBlur={deactivateMode} autoFocus={true} value={status}/></div>\n            : <div><span onDoubleClick={activateMode}>{props.status || '------'}</span></div>}\n         </div>\n    )      \n}\n\n\nexport default ProfileStatusWithHooks; ","import React from 'react';\nimport styles from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport Preloader from '../../../common/Preloader/Preloader'\n\n\nconst ProfileInfo = ({userProfile, status, updateUserStatus}) => {\n\n  if(userProfile === null || userProfile === undefined){\n    return (\n      <Preloader />\n    )\n  }\n\n  return (\n    <div className={styles.profile}>\n      {/* <img\n        src=\"https://img4.goodfon.ru/original/2560x1440/5/a5/react-framework-logo.jpg\"\n        alt=\"main-img\"\n      /> */}\n      <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\n      <div className={styles.profileAvatar}><img src={userProfile.photos.large} /></div>\n      <div>About Me</div>\n      <div>Contacts</div>\n      <div className={styles.lastDescription}>More description</div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img\n        src=\"https://im0-tub-ru.yandex.net/i?id=d84f452cb35928f4eced6eb5444bdde5&n=13\"\n        alt=\"user\"\n      />\n      <span>{props.message}</span>\n      <div>\n        <span>likes {props.likeCounts}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../../utilities/validators/validators';\nimport { Textarea } from '../../../common/FormControls/FormControls';\n\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst ProfileAddMessageForm = (props) => {\n    return(\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div><Field component={Textarea} placeholder='Post Message' name='newMessage' validate={[requiredField, maxLength30]}/></div>\n                <div><button>Add post</button></div>\n            </form>\n        </div>\n    )\n}\n\n\nlet ProfileAddMessageReduxForm = reduxForm({\n    form: 'profilePost'\n})(ProfileAddMessageForm)\n\n\nexport default ProfileAddMessageReduxForm;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport ProfileAddMessageReduxForm from './MyPostsForm';\n\n\n\n\nclass MyPosts extends React.PureComponent {\n\n  componentDidMount(){\n    setTimeout(() => {\n      this.setState({a: 12});\n    }, 3000)\n  }\n \n\n  // shouldCoponentUpdate(nextProps, nextState){\n  //   return nextProps !== this.props || nextState !== this.state\n  // }\n  \n\n  addNewPost = (values) => {\n    this.props.addPost(values.newMessage);  \n  };\n\n  \n  render(){\n    console.log('render')\n    return <div className={classes.myposts}>\n        My posts\n        <div className={classes.newpost}>\n          <ProfileAddMessageReduxForm onSubmit={this.addNewPost} />\n        </div>\n        <div className={classes.posts}>{this.props.posts.map((el) => {\n    return <Post message={el.message} likeCounts={el.likeCounts} />\n    })}</div>\n      </div>\n    \n  }\n  \n};\n\nexport default MyPosts;","import React from 'react';\nimport MyPosts from './MyPosts';\nimport { addPost } from '../../../redux/profileReducer';\nimport { connect } from 'react-redux';\n\n \nconst mapStateToProps = (state) => {\n  return {\n    newPostText: state.profilePage.newPostText,\n    posts: state.profilePage.postsData\n  }\n}\n\n\n\nconst MyPostsContainer = connect(mapStateToProps, {\n  addPost\n})(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n    return(\n        <div>\n        <ProfileInfo userProfile={props.userProfile}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus} />\n        <MyPostsContainer />\n      </div>\n    )\n}\n\nexport default Profile; ","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport {getProfileThunkCreator, getUserStatusTC, updateUserStatusTC} from '../../redux/profileReducer';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount(){\n    let userID = this.props.match.params.userID;\n    if(!userID){\n      userID = this.props.authorizedUserID;\n    }\n    if(!userID){\n      this.props.history.push('/login');\n    }\n\n      this.props.getUserProfile(userID);\n      this.props.getUserStatus(userID);\n  }\n\n  render () {\n    return(\n      <div>\n      <Profile {...this.props} \n      userProfile={this.props.userProfile}\n      status={this.props.status}\n      updateUserStatus={this.props.updateUserStatus} />\n    </div>\n  )\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    userProfile: state.profilePage.userProfile,\n    status: state.profilePage.status,\n    authorizedUserID: state.auth.id,\n    isAuth: state.auth.isAuth,\n    fake: state.profilePage.fakeNum\n  }\n}\n\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile: getProfileThunkCreator,\n    getUserStatus: getUserStatusTC,\n    updateUserStatus: updateUserStatusTC}),\n  withRouter,\n  //withAuthRedirect\n)(ProfileContainer)\n\n\n\n"],"sourceRoot":""}